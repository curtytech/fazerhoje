// Limpar cache yarn
yarn cache clean

// Abrir com Metro
npx react-native start
npx react-native run-android

// Formatar datas
import { format } from 'date-fns';

// Gerar APK
na pasta android 
gradlew assembleRelease


// install watermelon db
yarn add @nozbe/watermelondb
yarn add --dev @babel/plugin-proposal-decorators

// babel.config.js deve ficar assim
module.exports = function (api) {
  api.cache(true);
  return {
    presets: ['babel-preset-expo', 'module:metro-react-native-babel-preset'],
    plugins: [
      ["@babel/plugin-proposal-decorators", { "legacy": true }],
      [
        'module-resolver',
        {
          root: ['./src'],
          alias: {
            '@dtos': './src/dtos',
            '@assets': './src/assets',
            '@components': './src/components',
            '@screens': './src/screens',
            '@storage': './src/storage',
            '@utils': './src/utils',
            '@services': './src/services',
            '@hooks': './src/hooks',
            '@contexts': './src/contexts',
            '@routes': './src/routes',
            '@databases': './src/databases'
          }
        },
      ],
    ],
  };
};

// tem que trocar a versao do kotlin no android/build.gradle
kotlinVersion = "1.5.20"



//i svg transformer
yarn add --dev react-native-svg-transformer

//add essas linhas no metro.config.js
const { getDefaultConfig } = require("expo/metro-config");

module.exports = (() => {
  const config = getDefaultConfig(__dirname);

  const { transformer, resolver } = config;

  config.transformer = {
    ...transformer,
    babelTransformerPath: require.resolve("react-native-svg-transformer"),
  };
  config.resolver = {
    ...resolver,
    assetExts: resolver.assetExts.filter((ext) => ext !== "svg"),
    sourceExts: [...resolver.sourceExts, "svg"],
  };

  return config;
})();